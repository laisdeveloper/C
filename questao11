// Informa√ß√µes importantes  abaixo: (ass.: Vini)
// C√≥digo modularizado e funcionando certin üëç (vers√£o: Vin√≠cius)

#include <stdio.h>
#include <stdlib.h>

void preencherVetor(float *vetor, int qtdElementos) {
  for (int i = 0; i < qtdElementos; i++) {
    // printf("Digite a altura da pessoa %d: ", i + 1);
    scanf("%f", &vetor[i]);
  }
}

void compararAlturas(float *vetor, int qtdElementos, float *maior, float *menor,
                     float *somaAlturas) {
  for (int i = 0; i < qtdElementos; i++) {
    *somaAlturas += vetor[i];
    if (i == 0) {
      *maior = vetor[i];
      *menor = vetor[i];
    } else if (vetor[i] > *maior) {
      *maior = vetor[i];
    } else if (vetor[i] < *menor) {
      *menor = vetor[i];
    }
  }
}

void exibirInformacoes(float maior, float menor, float somaAlturas,
                       int qtdElementos) {
  float media = 0;
  if (qtdElementos != 0) {
    media = somaAlturas / qtdElementos;
  }
  printf("Maior: %.2f\n", maior);
  printf("Menor: %.2f\n", menor);
  printf("Media: %.2f", media);
}

int main(void) {

  float *vetor, maior = 0, menor = 0, somaAlturas = 0;
  int qtdElementos;

  // removi a parte abaixo para n√£o dar erro
  printf("Digite a quantidade de elementos do vetor: ");

  scanf("%d", &qtdElementos);
  vetor = (float *)(malloc(qtdElementos * sizeof(float)));

  // preencher vetor:
  preencherVetor(vetor, qtdElementos);

  // compararAlturas
  compararAlturas(vetor, qtdElementos, &maior, &menor, &somaAlturas);

  // exibir informa√ß√µes
  exibirInformacoes(maior, menor, somaAlturas, qtdElementos);
  free(vetor);
  return 0;
}

/*√Ärea de chat abaixo: */
// chat deletado
